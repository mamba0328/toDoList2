(()=>{"use strict";function e(){const e=document.getElementById("modalWindow"),t=document.getElementById("overlay");e.classList.remove("active"),t.classList.remove("active"),document.getElementById("notes").value="",document.getElementById("modalTaskName").value=""}const t=[];let n="";const o=document.getElementById("addATask");o.addEventListener("mouseover",(e=>{e.target.style.backgroundColor="rgb(36, 163, 26)"})),o.addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="rgb(26, 153, 26)"})),o.addEventListener("click",(()=>{!function(){const e=document.getElementById("modalWindow"),t=document.getElementById("overlay");e.classList.add("active"),t.classList.add("active")}()})),document.getElementById("overlay").addEventListener("click",(()=>{e()}));const d=document.getElementById("modalTaskName");d.addEventListener("mouseenter",(e=>{e.target.style.outline="solid",e.target.style.outlineWidth="1px",e.target.style.outlineColor="grey"})),d.addEventListener("mouseleave",(e=>{e.target.style.outline="none"}));const l=Array.from(document.getElementsByClassName("deadline"));l.forEach((e=>{e.addEventListener("mouseover",(e=>{e.target.style.color="rgba(0,0,0,0.8)"})),e.addEventListener("mouseout",(e=>{e.target.style.color="rgb(78, 78, 78)",""===n&&(e.target.style.borderBottom="none")}))}));for(let e=0;e<l.length;e++)l[e].addEventListener("click",(t=>n=e));const a=document.getElementById("saveTask");a.addEventListener("click",(()=>{let o=function(e,t="today",n,o){return{name:e,deadline:t,notes:"",tags:""}}(d.value,n);t.push(o),function(e,t){const n=document.createElement("div");n.setAttribute("id","task");const o=document.createElement("div");o.classList.add("completeCircle");const d=document.createElement("h3");d.innerText=e,n.appendChild(o),n.appendChild(d),console.log(t),0==t?document.getElementById("todayHolder").appendChild(n):1==t?document.getElementById("tommorowHolder").appendChild(n):document.getElementById("somedayHolder").appendChild(n)}(o.name,o.deadline),n="",e(),function(){const e=Array.from(document.getElementsByClassName("completeCircle")),t=e[e.length-1];t.addEventListener("mouseover",(e=>{e.target.style.border="2px solid green"})),t.addEventListener("mouseleave",(e=>{e.target.style.border="1.99px solid black"})),t.addEventListener("click",(e=>{e.target.parentElement.remove()}))}()})),a.addEventListener("mouseover",(e=>{e.target.style.backgroundColor="rgb(26, 153, 26)"})),a.addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="transparent"})),Array.from(document.getElementsByClassName("todoDeadline")).forEach((e=>{e.addEventListener("mouseover",(e=>{e.target.previousElementSibling?e.target.classList.add("mouseon"):(e.target.style.borderBottom="1.5px solid grey",e.target.style.color="black")})),e.addEventListener("mouseleave",(e=>{e.target.previousElementSibling?e.target.classList.remove("mouseon"):(e.target.style.borderBottom="none",e.target.style.color="rgb(100, 100, 100)")})),e.addEventListener("click",(e=>{"none"===e.target.nextElementSibling.style.display?e.target.nextElementSibling.style.display="flex":e.target.nextElementSibling.style.display="none"}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVFoQixPQUFPLEdBRWxDaUIsRUFBT3JDLGlCQUFpQixhQUFjQyxJQUNsQ0EsRUFBRUMsT0FBT0MsTUFBTW1DLE9BQVMscUJBRzVCRCxFQUFPckMsaUJBQWlCLGNBQWVDLElBQ25DQSxFQUFFQyxPQUFPQyxNQUFNbUMsT0FBUyx3QkFHNUJELEVBQU9yQyxpQkFBaUIsU0FBVUMsSUFDOUJBLEVBQUVDLE9BQU9xQyxjQUFjNUMsWUY0RC9CLE1BSUowQixFQUFTckIsaUJBQWlCLGFBQWNDLElBQ3BDQSxFQUFFQyxPQUFPQyxNQUFNQyxnQkFBa0Isc0JBR3JDaUIsRUFBU3JCLGlCQUFpQixjQUFlQyxJQUNyQ0EsRUFBRUMsT0FBT0MsTUFBTUMsZ0JBQWtCLGlCQUlmUSxNQUFNQyxLQUFLdEIsU0FBU3VCLHVCQUF1QixpQkFDbkRDLFNBQVF5QixJQUNsQkEsRUFBYXhDLGlCQUFpQixhQUFjQyxJQUNwQ0EsRUFBRUMsT0FBT3VDLHVCQUlieEMsRUFBRUMsT0FBT1IsVUFBVVcsSUFBSSxZQUhuQkosRUFBRUMsT0FBT0MsTUFBTWUsYUFBZSxtQkFDOUJqQixFQUFFQyxPQUFPQyxNQUFNYyxNQUFRLFlBTS9CdUIsRUFBYXhDLGlCQUFpQixjQUFlQyxJQUNyQ0EsRUFBRUMsT0FBT3VDLHVCQUlieEMsRUFBRUMsT0FBT1IsVUFBVUMsT0FBTyxZQUh0Qk0sRUFBRUMsT0FBT0MsTUFBTWUsYUFBZSxPQUM5QmpCLEVBQUVDLE9BQU9DLE1BQU1jLE1BQVEseUJBTS9CdUIsRUFBYXhDLGlCQUFpQixTQUFVQyxJQUNhLFNBQTlDQSxFQUFFQyxPQUFPd0MsbUJBQW1CdkMsTUFBTXdDLFFBQ2pDMUMsRUFBRUMsT0FBT3dDLG1CQUFtQnZDLE1BQU13QyxRQUFVLE9BRTVDMUMsRUFBRUMsT0FBT3dDLG1CQUFtQnZDLE1BQU13QyxRQUFVLGMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdDIvLi9zcmMvbW9kYWxBcHBlYXJlbmNlLmpzIiwid2VicGFjazovL3RvZG9saXN0Mi8uL3NyYy90YXNrRmFjdG9yeS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdDIvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QyLy4vc3JjL3Nob3dUYXNrLmpzIiwid2VicGFjazovL3RvZG9saXN0Mi8uL3NyYy9jb21wbGV0ZUJ0bkRPTS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBvcGVuTW9kYWwoKSB7IFxyXG4gICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxXaW5kb3cnKTtcclxuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3ZlcmxheScpXHJcbiAgICBtb2RhbC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7IFxyXG4gICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxXaW5kb3cnKTtcclxuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3ZlcmxheScpXHJcbiAgICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgIG92ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICBjb25zdCB0ZXh0QXJlYSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdub3RlcycpO1xyXG4gICAgdGV4dEFyZWEudmFsdWUgPSAnJztcclxuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsVGFza05hbWUnKTtcclxuICAgIGlucHV0LnZhbHVlID0gJyc7XHJcbn1cclxuXHJcbmV4cG9ydCB7b3Blbk1vZGFsLCBcclxuY2xvc2VNb2RhbH0gIiwiZnVuY3Rpb24gbWFrZVRhc2sobmFtZSwgZGVhZGxpbmUgPSAndG9kYXknLCBub3RlcywgdGFncyl7IFxyXG4gICAgbm90ZXMgPSAnJzsgXHJcbiAgICB0YWdzID0gJyc7XHJcbiAgICByZXR1cm4ge25hbWUsIGRlYWRsaW5lLCBub3RlcywgdGFnc31cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWFrZVRhc2s7IiwiaW1wb3J0IHsgb3Blbk1vZGFsLCBjbG9zZU1vZGFsIH0gZnJvbSBcIi4vbW9kYWxBcHBlYXJlbmNlXCI7IFxyXG5pbXBvcnQgbWFrZVRhc2sgZnJvbSBcIi4vdGFza0ZhY3RvcnlcIjtcclxuaW1wb3J0IHNob3dUYXNrIGZyb20gXCIuL3Nob3dUYXNrXCI7XHJcbmltcG9ydCBtYWtlQnRuc0Z1bmN0aW9uYWwgZnJvbSBcIi4vY29tcGxldGVCdG5ET01cIjtcclxuXHJcblxyXG5jb25zdCB0YXNrc0NvbGxlY3Rpb24gPSBbXTsgXHJcbmxldCBjaG9zZW5EZWFkbGluZSA9ICcnOyBcclxuXHJcbi8vYWRkIGEgdGFzayBidXR0b24gZnVuY3Rpb25hbGl0eSBcclxuY29uc3QgYWRkQVRhc2tCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkQVRhc2snKTsgXHJcblxyXG5hZGRBVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCAoZSkgPT4ge1xyXG4gICAgZS50YXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYigzNiwgMTYzLCAyNiknO1xyXG59KVxyXG5hZGRBVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKGUpID0+IHtcclxuICAgIGUudGFyZ2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2IoMjYsIDE1MywgMjYpJ1xyXG59KVxyXG5hZGRBVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIG9wZW5Nb2RhbCgpO1xyXG59KVxyXG5cclxuLy9tb2R1bGUgb3ZlcmxheSBmdW5jdGlvbmFsaXR5XHJcbmNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3ZlcmxheScpO1xyXG5cclxub3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGNsb3NlTW9kYWwoKTtcclxufSlcclxuXHJcbi8vbW9kYWwgaW5wdXRzIGZ1bmN0aW9uYWxpdHkgXHJcbmNvbnN0IHRhc2tOYW1lSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxUYXNrTmFtZScpOyBcclxuIFxyXG50YXNrTmFtZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCAoZSkgPT4geyBcclxuICAgIGUudGFyZ2V0LnN0eWxlLm91dGxpbmUgPSAnc29saWQnO1xyXG4gICAgZS50YXJnZXQuc3R5bGUub3V0bGluZVdpZHRoID0gJzFweCc7XHJcbiAgICBlLnRhcmdldC5zdHlsZS5vdXRsaW5lQ29sb3IgPSAnZ3JleSc7XHJcbn0pXHJcblxyXG50YXNrTmFtZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoZSkgPT4geyBcclxuICAgIGUudGFyZ2V0LnN0eWxlLm91dGxpbmUgPSAnbm9uZSdcclxufSlcclxuXHJcbi8vbW9kYWwgd2luZG93IGRlYWRsaW5lcyBmdW5jdGlvbmFsaXR5XHJcbmNvbnN0IGRlYWRsaW5lcyA9IEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZGVhZGxpbmUnKSk7XHJcblxyXG5kZWFkbGluZXMuZm9yRWFjaChkZWFkbGluZSA9PiB7IFxyXG4gICAgZGVhZGxpbmUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgKGUpPT4geyBcclxuICAgICAgICBlLnRhcmdldC5zdHlsZS5jb2xvciA9ICdyZ2JhKDAsMCwwLDAuOCknO1xyXG4gICAgfSlcclxuICAgIGRlYWRsaW5lLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgKGUpPT4geyBcclxuICAgICAgICBlLnRhcmdldC5zdHlsZS5jb2xvciA9ICdyZ2IoNzgsIDc4LCA3OCknO1xyXG4gICAgICAgIGlmKGNob3NlbkRlYWRsaW5lID09PSAnJyl7IFxyXG4gICAgICAgICBlLnRhcmdldC5zdHlsZS5ib3JkZXJCb3R0b20gPSAnbm9uZSc7XHJcbiAgICAgIH0gXHJcbiAgICB9KVxyXG59KVxyXG4gICAgZm9yKGxldCBpPTA7IGk8ZGVhZGxpbmVzLmxlbmd0aDsgaSsrKXsgXHJcblxyXG4gICAgIGRlYWRsaW5lc1tpXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKT0+IHsgXHJcbiAgICAgICAgICAgIHJldHVybiBjaG9zZW5EZWFkbGluZSA9IGk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbi8vc2F2ZSB0YXNrIG1vZHVsZSBmdW5jdGlvbmFsaXR5IFxyXG5jb25zdCBzYXZlVGFzayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYXZlVGFzaycpO1xyXG5cclxuc2F2ZVRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAvL2NyZWF0ZXMgbmV3IHRhc2sgYW5kIHB1c2ggaXQgdG8gY29sbGVjdGlvblxyXG4gICAgbGV0IG5ld1Rhc2sgPSBtYWtlVGFzayh0YXNrTmFtZUlucHV0LnZhbHVlLCBjaG9zZW5EZWFkbGluZSk7XHJcbiAgICB0YXNrc0NvbGxlY3Rpb24ucHVzaChuZXdUYXNrKTtcclxuICAgIHNob3dUYXNrKG5ld1Rhc2submFtZSwgbmV3VGFzay5kZWFkbGluZSk7XHJcbiAgICBjaG9zZW5EZWFkbGluZSA9ICcnIDsgLy9yZXR1cm5zIGRlYWRsaW5lIHRvIHVuY2hvc2VuIFxyXG4gICAgY2xvc2VNb2RhbCgpOyBcclxuICAgIG1ha2VCdG5zRnVuY3Rpb25hbCgpO1xyXG4gICAgXHJcbn0pXHJcblxyXG5zYXZlVGFzay5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCAoZSkgPT4ge1xyXG4gICAgZS50YXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYigyNiwgMTUzLCAyNiknO1xyXG59KVxyXG5cclxuc2F2ZVRhc2suYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIChlKSA9PiB7XHJcbiAgICBlLnRhcmdldC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAndHJhbnNwYXJlbnQnO1xyXG59KVxyXG5cclxuLy9kZWFkbGluZVdyYXBwZXJzIGZ1bmN0aW9uYWxpdHkgXHJcbmNvbnN0IHRvZG9EZWFkbGluZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RvZG9EZWFkbGluZScpKTtcclxudG9kb0RlYWRsaW5lcy5mb3JFYWNoKHRvZG9EZWFkbGluZSA9PiB7IFxyXG4gICAgdG9kb0RlYWRsaW5lLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIChlKSA9PiB7IFxyXG4gICAgICAgIGlmKCFlLnRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKXtcclxuICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuYm9yZGVyQm90dG9tID0gJzEuNXB4IHNvbGlkIGdyZXknO1xyXG4gICAgICAgICAgICBlLnRhcmdldC5zdHlsZS5jb2xvciA9ICdibGFjayc7XHJcbiAgICAgICAgfSBlbHNlIHsgXHJcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZCgnbW91c2VvbicpO1xyXG4gICAgIH1cclxuICAgIH0pXHJcblxyXG4gICAgdG9kb0RlYWRsaW5lLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoZSkgPT4geyBcclxuICAgICAgICBpZighZS50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZyl7XHJcbiAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmJvcmRlckJvdHRvbSA9ICdub25lJztcclxuICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuY29sb3IgPSAncmdiKDEwMCwgMTAwLCAxMDApJztcclxuICAgICAgICB9IGVsc2UgeyBcclxuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdtb3VzZW9uJyk7XHJcbiAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICB0b2RvRGVhZGxpbmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4geyBcclxuICAgICAgICBpZihlLnRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmcuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKXsgXHJcbiAgICAgICAgICAgIGUudGFyZ2V0Lm5leHRFbGVtZW50U2libGluZy5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xyXG4gICAgICAgIH0gZWxzZSB7IFxyXG4gICAgICAgICAgICBlLnRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmcuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH0pXHJcbn0pXHJcblxyXG4iLCJmdW5jdGlvbiBzaG93VGFzayhuYW1lLCBkZWFkbGluZSkgeyBcclxuICAgIGNvbnN0IHRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRhc2suc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrJyk7XHJcblxyXG4gICAgY29uc3QgY29tcGxldGVDaXJjbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNvbXBsZXRlQ2lyY2xlLmNsYXNzTGlzdC5hZGQoJ2NvbXBsZXRlQ2lyY2xlJyk7XHJcblxyXG4gICAgY29uc3QgdGFza05hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gICAgdGFza05hbWUuaW5uZXJUZXh0ID0gbmFtZTtcclxuXHJcbiAgICB0YXNrLmFwcGVuZENoaWxkKGNvbXBsZXRlQ2lyY2xlKTtcclxuICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza05hbWUpO1xyXG4gICAgY29uc29sZS5sb2coZGVhZGxpbmUpXHJcblxyXG4gICAgLy9jaGVrcyBpbiB3aGljaCB0YXNrWm9uZSBpdCB3aWxsIGJlIHNlbnQgXHJcblxyXG4gICAgaWYoZGVhZGxpbmUgPT0gMCl7IFxyXG4gICAgICAgIGNvbnN0IHRvZGF5SG9sZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZGF5SG9sZGVyJyk7IFxyXG4gICAgICAgIHRvZGF5SG9sZGVyLmFwcGVuZENoaWxkKHRhc2spO1xyXG4gICAgfSBlbHNlIGlmKCBkZWFkbGluZSA9PSAxKSB7IFxyXG4gICAgICAgIGNvbnN0IHRvbW1vcm93SG9sZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvbW1vcm93SG9sZGVyJyk7IFxyXG4gICAgICAgIHRvbW1vcm93SG9sZGVyLmFwcGVuZENoaWxkKHRhc2spO1xyXG4gICAgfSBlbHNlIHsgXHJcbiAgICAgICAgY29uc3Qgc29tZWRheUhvbGRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzb21lZGF5SG9sZGVyJyk7XHJcbiAgICAgICAgc29tZWRheUhvbGRlci5hcHBlbmRDaGlsZCh0YXNrKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2hvd1Rhc2s7ICIsImZ1bmN0aW9uIG1ha2VCdG5zRnVuY3Rpb25hbCgpIHsgXHJcbiAgICBjb25zdCBidXR0b25zID0gQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb21wbGV0ZUNpcmNsZScpKTtcclxuICAgIGNvbnN0IGJ1dHRvbiA9IGJ1dHRvbnNbYnV0dG9ucy5sZW5ndGgtMV07XHJcbiBcclxuICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgKGUpID0+IHsgXHJcbiAgICAgICAgICAgIGUudGFyZ2V0LnN0eWxlLmJvcmRlciA9ICcycHggc29saWQgZ3JlZW4nXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoZSkgPT4geyBcclxuICAgICAgICAgICAgZS50YXJnZXQuc3R5bGUuYm9yZGVyID0gJzEuOTlweCBzb2xpZCBibGFjaydcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4geyBcclxuICAgICAgICAgICAgZS50YXJnZXQucGFyZW50RWxlbWVudC5yZW1vdmUoKTtcclxuICAgICAgICB9KVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtYWtlQnRuc0Z1bmN0aW9uYWw7Il0sIm5hbWVzIjpbImNsb3NlTW9kYWwiLCJtb2RhbCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJvdmVybGF5IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwidmFsdWUiLCJ0YXNrc0NvbGxlY3Rpb24iLCJjaG9zZW5EZWFkbGluZSIsImFkZEFUYXNrQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsImFkZCIsIm9wZW5Nb2RhbCIsInRhc2tOYW1lSW5wdXQiLCJvdXRsaW5lIiwib3V0bGluZVdpZHRoIiwib3V0bGluZUNvbG9yIiwiZGVhZGxpbmVzIiwiQXJyYXkiLCJmcm9tIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImZvckVhY2giLCJkZWFkbGluZSIsImNvbG9yIiwiYm9yZGVyQm90dG9tIiwiaSIsImxlbmd0aCIsInNhdmVUYXNrIiwibmV3VGFzayIsIm5hbWUiLCJub3RlcyIsInRhZ3MiLCJwdXNoIiwidGFzayIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJjb21wbGV0ZUNpcmNsZSIsInRhc2tOYW1lIiwiaW5uZXJUZXh0IiwiYXBwZW5kQ2hpbGQiLCJjb25zb2xlIiwibG9nIiwiYnV0dG9ucyIsImJ1dHRvbiIsImJvcmRlciIsInBhcmVudEVsZW1lbnQiLCJ0b2RvRGVhZGxpbmUiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwiZGlzcGxheSJdLCJzb3VyY2VSb290IjoiIn0=