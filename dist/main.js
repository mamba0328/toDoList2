(()=>{"use strict";function e(){const e=document.getElementById("modalWindow"),t=document.getElementById("overlay");e.classList.remove("active"),t.classList.remove("active"),document.getElementById("notes").value="",document.getElementById("modalTaskName").value=""}const t=function(e,t="today",n="",a="",s){let o=Math.floor(1e5*Math.random());return{name:e,deadline:t,notes:n,tags:a,id:o,putTask:function(){let e=s(),t=[this.name,this.deadline,this.notes,this.tags,o];e.push(t),localStorage.setItem("task",JSON.stringify(e))}}},n=function(e,t,n){const a=document.createElement("div");a.setAttribute("id","task"),a.classList.add(n),console.log(a.classList.value);const s=document.createElement("div");s.classList.add("completeCircle");const o=document.createElement("h3");o.classList.add("taskName"),o.setAttribute("id",n),o.innerText=e,a.appendChild(s),a.appendChild(o),0==t?document.getElementById("todayHolder").appendChild(a):1==t?document.getElementById("tommorowHolder").appendChild(a):document.getElementById("somedayHolder").appendChild(a)},a=function(e,t){const n=e.target.id;let a="";for(let e=0;e<t.length;e++)n==t[e].id&&(a=t[e]);return[a.name,a.deadline,a.id]};function s(){const e=document.getElementById("modalInfo"),t=document.getElementById("overlay");e.classList.remove("active"),t.classList.remove("active");const n=document.getElementById("apply");n.classList.contains(n.classList.value)&&n.classList.remove(n.classList.value)}const o=function(e){const t=Array.from(document.querySelectorAll(".tag"));for(let n=0;n<t.length;n++)e.includes(t[n].id)?t[n].classList.add("chosen"):t[n].classList.remove("chosen")},l=function(){const e=localStorage.getItem("task");return null!==e?JSON.parse(e):[]},r=function(e,t){localStorage.clear(),e.forEach((e=>{e.putTask()}))},d=[];let c="",i=[],m=l();0!=m&&m.forEach((e=>{let a=t(e[0],e[1],e[2],e[3],l);d.push(a),n(a.name,a.deadline,a.id)}));const g=document.getElementById("addATask");g.addEventListener("mouseover",(e=>{e.target.style.backgroundColor="rgb(36, 163, 26)"})),g.addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="rgb(26, 153, 26)"})),g.addEventListener("click",(()=>{!function(e,t){e([]);const n=document.getElementById("modalWindow"),a=document.getElementById("overlay");n.classList.add("active"),a.classList.add("active"),Array.from(document.getElementsByClassName("deadline")).forEach((e=>{e.style.color="rgb(78,78,78)"}))}(o)})),document.getElementById("overlay").addEventListener("click",(()=>{e(),s(),c="",i=[]}));const u=document.getElementById("modalTaskName");u.addEventListener("mouseenter",(e=>{e.target.style.outline="solid",e.target.style.outlineWidth="1px",e.target.style.outlineColor="grey"})),u.addEventListener("mouseleave",(e=>{e.target.style.outline="none"}));const y=Array.from(document.getElementsByClassName("deadline"));y.forEach((e=>{e.addEventListener("mouseover",(e=>{""===c&&(e.target.style.color="rgba(26, 153, 26)")})),e.addEventListener("mouseout",(e=>{""===c&&(e.target.style.color="rgb(78, 78, 78)")}))}));for(let e=0;e<y.length;e++)y[e].addEventListener("click",(t=>(y.forEach((e=>{e.style.color="rgb(78,78,78)"})),t.target.style.color="rgba(26, 153, 26)",c=e)));const E=document.getElementById("saveTask");E.addEventListener("click",(()=>{if(0!=u.value){const a=document.getElementById("notes");let s=t(u.value,c,a.value,i,l);s.putTask(),d.push(s),n(s.name,s.deadline,s.id),c="",i=[],e()}else alert("You should enter at least name of the task")})),E.addEventListener("mouseover",(e=>{e.target.style.backgroundColor="rgb(26, 153, 26)"})),E.addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="transparent"})),Array.from(document.getElementsByClassName("todoDeadline")).forEach((e=>{e.addEventListener("mouseover",(e=>{e.target.previousElementSibling?e.target.classList.add("mouseon"):(e.target.style.borderBottom="1.5px solid grey",e.target.style.color="black")})),e.addEventListener("mouseleave",(e=>{e.target.previousElementSibling?e.target.classList.remove("mouseon"):(e.target.style.borderBottom="none",e.target.style.color="rgb(100, 100, 100)")})),e.addEventListener("click",(e=>{"none"===e.target.nextElementSibling.style.display?e.target.nextElementSibling.style.display="flex":e.target.nextElementSibling.style.display="none"}))}));const v=document.querySelector("body");v.addEventListener("click",(e=>{e.target.matches(".completeCircle")&&(function(e,t){const n=e.target.parentElement.classList.value;let a=0;for(let e=0;e<t.length;e++)n==t[e].id&&(a=t[e]);const s=document.getElementById("competedTasks"),o=document.createElement("del");o.innerText=a.name,o.classList.add("completedTask"),o.setAttribute("id",a.id),s.appendChild(o)}(e,d),e.target.parentElement.remove())})),v.addEventListener("mouseover",(e=>{e.target.matches(".completeCircle")&&(e.target.style.border="2px solid green")})),v.addEventListener("mouseout",(e=>{e.target.matches(".completeCircle")&&(e.target.style.border="1.99px solid black")})),v.addEventListener("mouseover",(e=>{e.target.matches(".completedTask")&&e.target.classList.add("mouseon")})),v.addEventListener("mouseout",(e=>{e.target.matches(".completedTask")&&e.target.classList.remove("mouseon")})),v.addEventListener("click",(e=>{e.target.matches(".completedTask")&&(n(a(e,d)[0],a(e,d)[1],a(e,d)[2]),e.target.remove())})),Array.from(document.querySelectorAll(".tag")).forEach((e=>{e.addEventListener("click",(e=>{(function(e,t){if(t.includes(e.target.innerText))for(let n=0;n<t.length;n++)t[n]==e.target.innerText&&t.splice(n,1);else t.push(e.target.innerText)})(e,i),console.log(i),o(i)}))})),v.addEventListener("click",(e=>{e.target.matches(".taskName")&&(console.log(i),i=function(e,t,n,a){const s=e.target.parentElement.classList.value;let o="";for(let e=0;e<n.length;e++)s==n[e].id&&(o=n[e]);a=o.tags,t(o.tags),document.getElementById("taskInfoName").innerText=o.name,document.getElementById("taskInfoNotes").innerText=o.notes;const l=document.getElementById("modalInfo"),r=document.getElementById("overlay");l.classList.add("active"),r.classList.add("active");const d=Array.from(document.getElementsByClassName("infoDeadline"));return d.forEach((e=>{e.style.color="rgb(78,78,78)"})),0==o.deadline&&(d[0].style.color="rgba(26, 153, 26)"),1==o.deadline&&(d[1].style.color="rgba(26, 153, 26)"),2==o.deadline&&(d[2].style.color="rgba(26, 153, 26)"),document.getElementById("apply").classList.add(s),a}(e,o,d,i),console.log(i))})),document.getElementById("apply").addEventListener("click",(e=>{(function(e,t,n,a,s,o,l){const r=e.target.classList.value;let d="";for(let e=0;e<n.length;e++)r==n[e].id&&(d=n[e]);d.tags=t,e.target.classList.remove(r),d.deadline!=a&&(d.deadline=a,document.getElementById(d.id).parentElement.remove(),s(d.name,d.deadline,d.id)),o(n,l)})(e,i,d,c,n,r,l),s()}));const L=Array.from(document.getElementsByClassName("infoDeadline"));L.forEach((e=>{e.addEventListener("click",(e=>{L.forEach((e=>{e.style.color="rgb(78,78,78)"})),c=function(e,t){return e.target.style.color="rgb(26, 153, 26)","Today"==e.target.innerText&&(t=0),"Tommorow"==e.target.innerText&&(t=1),"Someday"==e.target.innerText&&(t=2),t}(e,c)}))})),document.getElementById("cancel").addEventListener("click",(()=>{s(),c="",i=[]}));const f=Array.from(document.getElementsByClassName("navigationTag"));f.forEach((e=>{e.addEventListener("mouseover",(t=>{e.classList.add(t.target.id)})),e.addEventListener("mouseleave",(t=>{Array.from(t.target.classList.value).includes("c")||e.classList.remove(t.target.id)})),e.addEventListener("click",(t=>{Array.from(t.target.classList.value).includes("c")?(e.classList.remove(t.target.id),e.classList.remove("chosen"),Array.from(document.getElementsByClassName("taskName")).forEach((e=>{e.parentElement.style.display="flex"}))):(f.forEach((e=>{e.classList.remove(e.id),e.classList.remove("chosen")})),e.classList.add(t.target.id),e.classList.add("chosen"),function(e,t){const n=e.target.innerText,a=Array.from(document.getElementsByClassName("taskName"));let s=[];for(let e=0;e<t.length;e++)for(let a=0;a<t.length;a++)n==t[e].tags[a]&&s.push(t[e].id);a.forEach((e=>{e.parentElement.style.display="none";for(let t=0;t<a.length;t++)s[t]==e.id&&(e.parentElement.style.display="flex")}))}(t,d))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,