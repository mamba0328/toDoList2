(()=>{"use strict";function e(){const e=document.getElementById("modalWindow"),t=document.getElementById("overlay");e.classList.remove("active"),t.classList.remove("active"),document.getElementById("notes").value="",document.getElementById("modalTaskName").value=""}const t=function(e,t,n){const a=document.createElement("div");a.setAttribute("id","task"),a.classList.add(n),console.log(a.classList.value);const s=document.createElement("div");s.classList.add("completeCircle");const o=document.createElement("h3");o.classList.add("taskName"),o.setAttribute("id",n),o.innerText=e,a.appendChild(s),a.appendChild(o),0==t?document.getElementById("todayHolder").appendChild(a):1==t?document.getElementById("tommorowHolder").appendChild(a):document.getElementById("somedayHolder").appendChild(a)},n=function(e,t){const n=e.target.id;let a="";for(let e=0;e<t.length;e++)n==t[e].id&&(a=t[e]);return[a.name,a.deadline,a.id]};function a(){const e=document.getElementById("modalInfo"),t=document.getElementById("overlay");e.classList.remove("active"),t.classList.remove("active");const n=document.getElementById("apply");n.classList.contains(n.classList.value)&&n.classList.remove(n.classList.value)}const s=function(e){const t=Array.from(document.querySelectorAll(".tag"));for(let n=0;n<t.length;n++)e.includes(t[n].id)?t[n].classList.add("chosen"):t[n].classList.remove("chosen")},o=[];let l="",r=[];const d=document.getElementById("addATask");d.addEventListener("mouseover",(e=>{e.target.style.backgroundColor="rgb(36, 163, 26)"})),d.addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="rgb(26, 153, 26)"})),d.addEventListener("click",(()=>{!function(e,t){e([]);const n=document.getElementById("modalWindow"),a=document.getElementById("overlay");n.classList.add("active"),a.classList.add("active"),Array.from(document.getElementsByClassName("deadline")).forEach((e=>{e.style.color="rgb(78,78,78)"}))}(s)})),document.getElementById("overlay").addEventListener("click",(()=>{e(),a(),l="",r=[]}));const c=document.getElementById("modalTaskName");c.addEventListener("mouseenter",(e=>{e.target.style.outline="solid",e.target.style.outlineWidth="1px",e.target.style.outlineColor="grey"})),c.addEventListener("mouseleave",(e=>{e.target.style.outline="none"}));const i=Array.from(document.getElementsByClassName("deadline"));i.forEach((e=>{e.addEventListener("mouseover",(e=>{""===l&&(e.target.style.color="rgba(26, 153, 26)")})),e.addEventListener("mouseout",(e=>{""===l&&(e.target.style.color="rgb(78, 78, 78)")}))}));for(let e=0;e<i.length;e++)i[e].addEventListener("click",(t=>(i.forEach((e=>{e.style.color="rgb(78,78,78)"})),t.target.style.color="rgba(26, 153, 26)",l=e)));const m=document.getElementById("saveTask");m.addEventListener("click",(()=>{const n=document.getElementById("notes");let a=function(e,t="today",n="",a=""){return{name:e,deadline:t,notes:n,tags:a,id:Math.floor(1e5*Math.random())}}(c.value,l,n.value,r);o.push(a),t(a.name,a.deadline,a.id),l="",r=[],e()})),m.addEventListener("mouseover",(e=>{e.target.style.backgroundColor="rgb(26, 153, 26)"})),m.addEventListener("mouseleave",(e=>{e.target.style.backgroundColor="transparent"})),Array.from(document.getElementsByClassName("todoDeadline")).forEach((e=>{e.addEventListener("mouseover",(e=>{e.target.previousElementSibling?e.target.classList.add("mouseon"):(e.target.style.borderBottom="1.5px solid grey",e.target.style.color="black")})),e.addEventListener("mouseleave",(e=>{e.target.previousElementSibling?e.target.classList.remove("mouseon"):(e.target.style.borderBottom="none",e.target.style.color="rgb(100, 100, 100)")})),e.addEventListener("click",(e=>{"none"===e.target.nextElementSibling.style.display?e.target.nextElementSibling.style.display="flex":e.target.nextElementSibling.style.display="none"}))}));const g=document.querySelector("body");g.addEventListener("click",(e=>{e.target.matches(".completeCircle")&&(function(e,t){const n=e.target.parentElement.classList.value;let a=0;for(let e=0;e<t.length;e++)n==t[e].id&&(a=t[e]);const s=document.getElementById("competedTasks"),o=document.createElement("del");o.innerText=a.name,o.classList.add("completedTask"),o.setAttribute("id",a.id),s.appendChild(o)}(e,o),e.target.parentElement.remove())})),g.addEventListener("mouseover",(e=>{e.target.matches(".completeCircle")&&(e.target.style.border="2px solid green")})),g.addEventListener("mouseout",(e=>{e.target.matches(".completeCircle")&&(e.target.style.border="1.99px solid black")})),g.addEventListener("mouseover",(e=>{e.target.matches(".completedTask")&&e.target.classList.add("mouseon")})),g.addEventListener("mouseout",(e=>{e.target.matches(".completedTask")&&e.target.classList.remove("mouseon")})),g.addEventListener("click",(e=>{e.target.matches(".completedTask")&&(t(n(e,o)[0],n(e,o)[1],n(e,o)[2]),e.target.remove())})),Array.from(document.querySelectorAll(".tag")).forEach((e=>{e.addEventListener("click",(e=>{(function(e,t){if(t.includes(e.target.innerText))for(let n=0;n<t.length;n++)t[n]==e.target.innerText&&t.splice(n,1);else t.push(e.target.innerText)})(e,r),console.log(r),s(r)}))})),g.addEventListener("click",(e=>{e.target.matches(".taskName")&&(console.log(r),r=function(e,t,n,a){const s=e.target.parentElement.classList.value;let o="";for(let e=0;e<n.length;e++)s==n[e].id&&(o=n[e]);a=o.tags,t(o.tags),document.getElementById("taskInfoName").innerText=o.name,document.getElementById("taskInfoNotes").innerText=o.notes;const l=document.getElementById("modalInfo"),r=document.getElementById("overlay");l.classList.add("active"),r.classList.add("active");const d=Array.from(document.getElementsByClassName("infoDeadline"));return d.forEach((e=>{e.style.color="rgb(78,78,78)"})),0==o.deadline&&(d[0].style.color="rgba(26, 153, 26)"),1==o.deadline&&(d[1].style.color="rgba(26, 153, 26)"),2==o.deadline&&(d[2].style.color="rgba(26, 153, 26)"),document.getElementById("apply").classList.add(s),a}(e,s,o,r),console.log(r))})),document.getElementById("apply").addEventListener("click",(e=>{(function(e,t,n,a,s){const o=e.target.classList.value;let l="";for(let e=0;e<n.length;e++)o==n[e].id&&(l=n[e]);l.tags=t,e.target.classList.remove(o),l.deadline!=a&&(l.deadline=a,document.getElementById(l.id).parentElement.remove(),s(l.name,l.deadline,l.id))})(e,r,o,l,t),a()}));const u=Array.from(document.getElementsByClassName("infoDeadline"));u.forEach((e=>{e.addEventListener("click",(e=>{u.forEach((e=>{e.style.color="rgb(78,78,78)"})),l=function(e,t){return e.target.style.color="rgb(26, 153, 26)","Today"==e.target.innerText&&(t=0),"Tommorow"==e.target.innerText&&(t=1),"Someday"==e.target.innerText&&(t=2),t}(e,l)}))})),document.getElementById("cancel").addEventListener("click",(()=>{a(),l="",r=[]}));const y=Array.from(document.getElementsByClassName("navigationTag"));y.forEach((e=>{e.addEventListener("mouseover",(t=>{e.classList.add(t.target.id)})),e.addEventListener("mouseleave",(t=>{Array.from(t.target.classList.value).includes("c")||e.classList.remove(t.target.id)})),e.addEventListener("click",(t=>{Array.from(t.target.classList.value).includes("c")?(e.classList.remove(t.target.id),e.classList.remove("chosen"),Array.from(document.getElementsByClassName("taskName")).forEach((e=>{e.parentElement.style.display="flex"}))):(y.forEach((e=>{e.classList.remove(e.id),e.classList.remove("chosen")})),e.classList.add(t.target.id),e.classList.add("chosen"),function(e,t){const n=e.target.innerText,a=Array.from(document.getElementsByClassName("taskName"));let s=[];for(let e=0;e<t.length;e++)for(let a=0;a<t.length;a++)n==t[e].tags[a]&&s.push(t[e].id);a.forEach((e=>{e.parentElement.style.display="none";for(let t=0;t<a.length;t++)s[t]==e.id&&(e.parentElement.style.display="flex")}))}(t,o))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,